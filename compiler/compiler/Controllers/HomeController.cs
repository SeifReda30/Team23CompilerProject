using compiler.Models;
using Microsoft.AspNetCore.Mvc;
using System.Diagnostics;

namespace compiler.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }
        [HttpGet]
        public IActionResult Index()
        {
            
            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }


        [HttpPost]
        public async Task<IActionResult> ScanFileAsync(IFormFile FileSource)
        {
            Scanner scanner = new Scanner();
            //Array array;
            // Uses Path.GetTempFileName to return a full path for a file, including the file name.
            string path = Path.GetTempFileName();
            using (var stream = System.IO.File.Create(path))
            {
                // The formFile is the method parameter which type is IFormFile
                // Saves the files to the local file system using a file name generated by the app.
                await FileSource.CopyToAsync(stream);
            }

            scanner = scanner.ScanningFile(path, scanner);

            //ViewBag.CorrectTokens = array;

            ViewModel vm = new ViewModel()
            {
                correctTokens = new List<CorrectToken>(),
                 wrongToken = new List<WrongToken>(),
            };
            vm.correctTokens = scanner.correctTokens;
            vm.wrongToken = scanner.wrongTokens;

            return View(vm);
        }
    }
}